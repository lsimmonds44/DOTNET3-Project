@model DataObjects.Plant

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Plant</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PlantID)

        <div class="form-group">
            @Html.LabelFor(model => model.CommonName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CommonName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CommonName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ScientificName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ScientificName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ScientificName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Care, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Care, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Care, "", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.GrowingZone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GrowingZone, new SelectList(
                  new List<Object>{
                       new { value = 3 , text = "3" },
                       new { value = 4 , text = "4" },
                       new { value = 5 , text = "5" },
                       new { value = 6 , text = "6" },
                       new { value = 7 , text = "7" },
                       new { value = 8 , text = "8" },
                       new { value = 9 , text = "9" },
                       new { value = 10 , text = "10" },
                    },
                  "value",
                  "text",
                  3), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GrowingZone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SoilType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SoilType, new SelectList(
                  new List<Object>{
                       new { value = "sandy" , text = "sandy" },
                       new { value = "clay" , text = "clay" },
                       new { value = "loam" , text = "loam" },
                       new { value = "gravel" , text = "gravel" },
                    },
                  "value",
                  "text",
                   "sandy"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SoilType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
